/* The following code was generated by JFlex 1.6.1 */

package specctra;
@SuppressWarnings("all")

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>SpecctraFileDescription.flex</tt>
 */
public class DsnFileScanner implements JflexScanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int STRING1 = 2;
  public static final int STRING2 = 4;
  public static final int NAME = 6;
  public static final int LAYER_NAME = 8;
  public static final int COMPONENT_NAME = 10;
  public static final int SPEC_CHAR = 12;
  public static final int IGNORE_QUOTE = 14;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7, 7
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\2\1\60\1\61\1\1\21\0\1\16\1\3\1\16"+
    "\1\11\1\6\1\16\1\16\1\16\1\12\1\56\1\57\1\5\1\20"+
    "\1\16\1\17\1\14\1\4\1\21\11\10\1\16\1\16\1\16\1\16"+
    "\1\16\1\16\1\16\1\23\1\24\1\33\1\44\1\22\1\43\1\37"+
    "\1\45\1\35\1\7\1\47\1\30\1\51\1\40\1\27\1\41\1\55"+
    "\1\42\1\26\1\32\1\31\1\36\1\54\1\52\1\50\1\53\1\16"+
    "\1\15\1\16\1\16\1\13\1\0\1\23\1\24\1\33\1\44\1\22"+
    "\1\43\1\37\1\45\1\35\1\7\1\47\1\30\1\51\1\40\1\27"+
    "\1\41\1\55\1\42\1\26\1\32\1\31\1\36\1\54\1\52\1\50"+
    "\1\53\3\0\1\16\6\0\1\60\252\0\2\34\115\0\1\25\u1ea8\0"+
    "\1\60\1\60\u0100\0\1\46\uded2\0\1\16\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\22\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\7\0\1\1\1\2\2\3\3\4\1\5\1\6\1\7"+
    "\1\2\1\5\2\4\1\2\6\4\1\2\10\4\1\2"+
    "\2\4\1\10\1\11\1\12\1\13\1\14\1\12\1\1"+
    "\1\15\1\16\1\2\3\1\2\4\3\0\1\17\7\4"+
    "\6\0\7\4\1\20\5\4\1\0\1\4\1\0\4\4"+
    "\1\0\1\4\1\0\2\4\1\0\4\4\1\0\6\4"+
    "\1\0\10\4\1\0\3\4\1\0\1\4\1\0\2\4"+
    "\1\0\2\1\1\0\1\4\2\17\1\0\1\17\1\0"+
    "\7\4\11\0\13\4\1\21\4\4\1\0\1\4\1\0"+
    "\6\4\1\0\1\4\1\0\2\4\2\22\1\4\1\23"+
    "\2\4\1\0\4\4\1\0\5\4\1\24\2\25\2\4"+
    "\1\0\7\4\1\0\1\4\2\26\1\4\1\0\2\4"+
    "\1\0\1\4\3\0\3\4\1\0\1\4\1\0\1\1"+
    "\1\27\1\0\1\4\1\0\3\4\1\0\1\4\1\0"+
    "\1\4\2\30\1\4\5\0\1\31\4\0\5\4\1\31"+
    "\10\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\32\1\0\2\4\1\33\1\4\1\0\1\4"+
    "\2\34\1\0\2\4\1\0\1\35\1\4\1\35\2\4"+
    "\1\36\1\4\1\0\1\4\1\37\1\0\2\4\1\0"+
    "\1\4\2\0\2\4\1\40\4\4\2\41\2\4\1\0"+
    "\1\4\1\42\2\4\1\43\2\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\44\2\0"+
    "\1\4\1\44\2\4\1\0\1\4\1\0\1\1\1\0"+
    "\3\4\1\0\1\4\1\0\2\4\6\0\1\45\1\46"+
    "\1\0\6\4\1\45\1\46\1\4\1\0\1\4\1\47"+
    "\1\4\1\50\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\3\4\1\0\3\4\1\51\2\52\2\0\2\4"+
    "\2\53\1\0\1\4\4\0\7\4\1\0\1\4\1\0"+
    "\2\4\1\0\1\4\2\0\4\4\1\54\1\55\1\56"+
    "\3\4\1\0\4\4\2\57\2\4\1\0\1\4\1\60"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\61\3\4\1\61\1\0\1\4\1\0\1\1\1\0"+
    "\2\4\1\62\2\63\1\0\2\4\4\0\1\64\2\0"+
    "\4\4\1\64\2\4\1\0\1\4\1\65\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\3\4\1\0"+
    "\4\4\2\0\2\4\1\34\1\0\1\34\1\4\1\0"+
    "\1\4\4\0\6\4\1\66\1\0\1\4\2\67\1\4"+
    "\1\0\1\4\2\0\2\4\1\0\10\4\1\0\2\4"+
    "\2\70\1\71\1\72\1\4\1\0\1\4\1\73\2\0"+
    "\2\4\1\0\1\4\1\0\1\4\1\74\1\0\1\75"+
    "\1\74\1\4\1\75\1\0\1\4\2\76\1\0\2\4"+
    "\1\0\2\4\1\77\6\0\1\77\6\4\2\100\1\4"+
    "\1\0\1\4\1\0\1\4\2\101\1\0\1\102\1\103"+
    "\1\4\1\102\1\103\1\0\1\4\1\104\2\4\1\0"+
    "\1\105\1\4\1\105\2\106\1\0\1\4\4\0\5\4"+
    "\2\107\1\0\1\4\1\0\1\4\1\0\1\4\2\0"+
    "\2\4\1\0\1\4\1\40\1\4\1\0\3\4\1\0"+
    "\3\4\1\110\1\0\3\4\1\0\1\4\1\0\1\4"+
    "\2\0\2\4\1\0\1\4\2\111\1\0\1\4\1\0"+
    "\1\4\2\112\1\4\1\0\1\4\1\113\6\0\7\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\2\114\2\4"+
    "\1\0\1\4\2\115\2\0\1\116\1\0\2\4\1\116"+
    "\2\4\1\0\1\4\1\0\1\4\1\0\1\4\2\117"+
    "\1\0\1\120\1\4\1\120\1\0\2\4\1\0\2\4"+
    "\1\0\1\4\1\0\2\4\1\0\3\4\1\0\1\4"+
    "\1\0\1\4\1\121\1\0\1\121\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\122\1\0\1\4\2\0"+
    "\1\123\3\0\2\4\1\123\4\4\2\124\1\0\1\4"+
    "\2\125\1\33\1\51\1\0\1\4\1\0\1\126\1\0"+
    "\1\4\1\126\2\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\2\127\1\0\2\4\1\0\1\4\1\130\1\0"+
    "\1\4\1\0\2\4\1\0\1\4\1\42\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\2\4\1\0\1\4\3\0\1\131"+
    "\1\0\3\4\1\131\1\4\1\132\1\0\2\4\1\0"+
    "\1\4\1\133\1\0\1\133\2\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\2\4\1\0\1\4\1\0"+
    "\1\4\2\134\1\4\2\135\1\0\1\4\1\0\1\4"+
    "\2\136\1\0\1\4\2\137\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\1\140\3\4\1\140"+
    "\1\0\2\4\2\141\2\142\1\4\2\143\1\0\1\4"+
    "\1\0\1\4\1\0\2\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\2\0\1\144\2\4\1\144\2\145\2\4\1\0\1\4"+
    "\2\146\1\0\2\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\2\147\1\0\1\4\2\150\2\151\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\152\1\0\1\152\1\4"+
    "\1\0\3\4\2\153\2\154\1\155\2\156\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\2\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\2\0\2\4\1\0\1\4\1\0\1\4"+
    "\2\157\1\4\2\160\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\2\4\1\0\1\4\2\161\2\162\1\0\1\4\1\0"+
    "\1\4\2\163\1\0\2\4\1\0\1\4\2\164\1\0"+
    "\1\4\1\0\2\4\2\165\1\0\1\4\1\0\2\4"+
    "\1\0\1\4\1\0\1\4\2\166\1\4\1\0\1\4"+
    "\1\0\2\4\1\0\1\4\1\0\1\4\1\167\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\2\170"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\2\171";

  private static int [] zzUnpackAction() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\62\0\144\0\226\0\310\0\372\0\u012c\0\u015e"+
    "\0\u0190\0\u01c2\0\u0190\0\u01f4\0\u0226\0\u0258\0\u028a\0\u0190"+
    "\0\u0190\0\u02bc\0\u02ee\0\u0320\0\u0352\0\u0384\0\u03b6\0\u03e8"+
    "\0\u041a\0\u044c\0\u047e\0\u04b0\0\u04e2\0\u0514\0\u0546\0\u0578"+
    "\0\u05aa\0\u05dc\0\u060e\0\u0640\0\u0672\0\u06a4\0\u06d6\0\u0708"+
    "\0\u0190\0\u0190\0\u073a\0\u0190\0\u0190\0\u076c\0\u079e\0\u0190"+
    "\0\u0190\0\u07d0\0\u0802\0\u0834\0\u0866\0\u0190\0\u0898\0\u08ca"+
    "\0\u08fc\0\u092e\0\u02ee\0\u0960\0\u0992\0\u09c4\0\u09f6\0\u0a28"+
    "\0\u0a5a\0\u0a8c\0\u0abe\0\u0af0\0\u0b22\0\u0b54\0\u0b86\0\u0bb8"+
    "\0\u0bea\0\u0c1c\0\u0c4e\0\u0c80\0\u0cb2\0\u0ce4\0\u0d16\0\u0226"+
    "\0\u0d48\0\u0d7a\0\u0dac\0\u0dde\0\u0e10\0\u0e42\0\u0e74\0\u0ea6"+
    "\0\u0ed8\0\u0f0a\0\u0f3c\0\u0f6e\0\u0fa0\0\u0fd2\0\u1004\0\u1036"+
    "\0\u1068\0\u109a\0\u10cc\0\u10fe\0\u1130\0\u1162\0\u1194\0\u11c6"+
    "\0\u11f8\0\u122a\0\u125c\0\u128e\0\u12c0\0\u12f2\0\u1324\0\u1356"+
    "\0\u1388\0\u13ba\0\u13ec\0\u141e\0\u1450\0\u1482\0\u14b4\0\u14e6"+
    "\0\u1518\0\u154a\0\u157c\0\u15ae\0\u15e0\0\u1612\0\u1644\0\u1676"+
    "\0\u16a8\0\u16da\0\u170c\0\u173e\0\u1770\0\u17a2\0\u17d4\0\u0190"+
    "\0\u1806\0\u1838\0\u186a\0\u189c\0\u18ce\0\u1900\0\u1932\0\u1964"+
    "\0\u1996\0\u19c8\0\u19fa\0\u1a2c\0\u1a5e\0\u1a90\0\u1ac2\0\u1af4"+
    "\0\u1b26\0\u1b58\0\u1b8a\0\u1bbc\0\u1bee\0\u1c20\0\u1c52\0\u1c84"+
    "\0\u1cb6\0\u1ce8\0\u1d1a\0\u1d4c\0\u0226\0\u1d7e\0\u1db0\0\u1de2"+
    "\0\u1e14\0\u1e46\0\u1e78\0\u1eaa\0\u1edc\0\u1f0e\0\u1f40\0\u1f72"+
    "\0\u1fa4\0\u1fd6\0\u2008\0\u203a\0\u206c\0\u209e\0\u20d0\0\u2102"+
    "\0\u2134\0\u2166\0\u2198\0\u21ca\0\u21fc\0\u222e\0\u2260\0\u2292"+
    "\0\u22c4\0\u22f6\0\u2328\0\u235a\0\u238c\0\u23be\0\u23f0\0\u2422"+
    "\0\u0226\0\u2454\0\u2486\0\u24b8\0\u24ea\0\u251c\0\u254e\0\u2580"+
    "\0\u25b2\0\u25e4\0\u2616\0\u2648\0\u267a\0\u26ac\0\u26de\0\u0190"+
    "\0\u0226\0\u2710\0\u2742\0\u2774\0\u27a6\0\u27d8\0\u280a\0\u283c"+
    "\0\u286e\0\u28a0\0\u28d2\0\u2904\0\u2936\0\u2968\0\u299a\0\u29cc"+
    "\0\u29fe\0\u079e\0\u2a30\0\u2a62\0\u2a94\0\u2ac6\0\u2af8\0\u2b2a"+
    "\0\u2b5c\0\u2b8e\0\u2bc0\0\u2bf2\0\u0190\0\u0226\0\u2c24\0\u2c56"+
    "\0\u2c88\0\u2cba\0\u2cec\0\u2d1e\0\u0190\0\u2d50\0\u2d82\0\u2db4"+
    "\0\u2de6\0\u2e18\0\u2e4a\0\u2e7c\0\u2eae\0\u2ee0\0\u0226\0\u2f12"+
    "\0\u2f44\0\u2f76\0\u2fa8\0\u2fda\0\u300c\0\u303e\0\u3070\0\u30a2"+
    "\0\u30d4\0\u3106\0\u3138\0\u316a\0\u319c\0\u31ce\0\u3200\0\u0226"+
    "\0\u3232\0\u3264\0\u3296\0\u32c8\0\u32fa\0\u332c\0\u335e\0\u3390"+
    "\0\u33c2\0\u33f4\0\u3426\0\u3458\0\u348a\0\u0190\0\u34bc\0\u0226"+
    "\0\u34ee\0\u3520\0\u0226\0\u3552\0\u3584\0\u35b6\0\u0226\0\u35e8"+
    "\0\u361a\0\u364c\0\u367e\0\u36b0\0\u36e2\0\u3714\0\u3746\0\u3778"+
    "\0\u37aa\0\u37dc\0\u380e\0\u3840\0\u3872\0\u0190\0\u0226\0\u38a4"+
    "\0\u38d6\0\u3908\0\u393a\0\u396c\0\u399e\0\u39d0\0\u3a02\0\u3a34"+
    "\0\u3a66\0\u3a98\0\u3aca\0\u3afc\0\u3b2e\0\u3b60\0\u3b92\0\u3bc4"+
    "\0\u3bf6\0\u3c28\0\u3c5a\0\u3c8c\0\u3cbe\0\u3cf0\0\u3d22\0\u3d54"+
    "\0\u3d86\0\u3db8\0\u3dea\0\u3e1c\0\u3e4e\0\u3e80\0\u3eb2\0\u3ee4"+
    "\0\u3f16\0\u3f48\0\u3f7a\0\u3fac\0\u3fde\0\u4010\0\u4042\0\u4074"+
    "\0\u40a6\0\u40d8\0\u410a\0\u413c\0\u416e\0\u41a0\0\u0190\0\u0190"+
    "\0\u41d2\0\u4204\0\u4236\0\u4268\0\u429a\0\u42cc\0\u42fe\0\u0226"+
    "\0\u0226\0\u4330\0\u4362\0\u4394\0\u0226\0\u43c6\0\u43f8\0\u442a"+
    "\0\u445c\0\u448e\0\u44c0\0\u44f2\0\u4524\0\u4556\0\u4588\0\u45ba"+
    "\0\u45ec\0\u461e\0\u4650\0\u4682\0\u46b4\0\u46e6\0\u4718\0\u474a"+
    "\0\u477c\0\u47ae\0\u47e0\0\u4812\0\u4844\0\u4876\0\u0190\0\u0226"+
    "\0\u48a8\0\u48da\0\u490c\0\u493e\0\u4970\0\u49a2\0\u49d4\0\u4a06"+
    "\0\u4a38\0\u4a6a\0\u4a9c\0\u4ace\0\u4b00\0\u4b32\0\u4b64\0\u4b96"+
    "\0\u4bc8\0\u4bfa\0\u4c2c\0\u4c5e\0\u4c90\0\u4cc2\0\u4cf4\0\u4d26"+
    "\0\u4d58\0\u4d8a\0\u0226\0\u4dbc\0\u4dee\0\u4e20\0\u4e52\0\u4e84"+
    "\0\u4eb6\0\u4ee8\0\u4f1a\0\u4f4c\0\u4f7e\0\u0190\0\u0226\0\u4fb0"+
    "\0\u4fe2\0\u5014\0\u5046\0\u0226\0\u5078\0\u50aa\0\u50dc\0\u510e"+
    "\0\u5140\0\u5172\0\u51a4\0\u51d6\0\u5208\0\u523a\0\u0190\0\u526c"+
    "\0\u529e\0\u52d0\0\u0226\0\u5302\0\u5334\0\u5366\0\u5398\0\u53ca"+
    "\0\u53fc\0\u542e\0\u0226\0\u0190\0\u0226\0\u5460\0\u5492\0\u54c4"+
    "\0\u54f6\0\u5528\0\u555a\0\u558c\0\u0190\0\u55be\0\u55f0\0\u5622"+
    "\0\u5654\0\u5686\0\u56b8\0\u0226\0\u56ea\0\u571c\0\u574e\0\u5780"+
    "\0\u0226\0\u57b2\0\u57e4\0\u5816\0\u5848\0\u587a\0\u58ac\0\u58de"+
    "\0\u5910\0\u5942\0\u5974\0\u59a6\0\u59d8\0\u5a0a\0\u5a3c\0\u5a6e"+
    "\0\u5aa0\0\u5ad2\0\u5b04\0\u5b36\0\u5b68\0\u5b9a\0\u5bcc\0\u0190"+
    "\0\u5bfe\0\u0226\0\u5c30\0\u5c62\0\u5c94\0\u5cc6\0\u5cf8\0\u5d2a"+
    "\0\u5d5c\0\u5d8e\0\u5dc0\0\u5df2\0\u5e24\0\u5e56\0\u5e88\0\u0226"+
    "\0\u5eba\0\u5eec\0\u0190\0\u0226\0\u5f1e\0\u5f50\0\u5f82\0\u5fb4"+
    "\0\u5fe6\0\u6018\0\u604a\0\u607c\0\u60ae\0\u60e0\0\u6112\0\u6144"+
    "\0\u6176\0\u61a8\0\u61da\0\u620c\0\u623e\0\u6270\0\u62a2\0\u0190"+
    "\0\u0226\0\u62d4\0\u0226\0\u6306\0\u6338\0\u636a\0\u0226\0\u639c"+
    "\0\u63ce\0\u6400\0\u6432\0\u6464\0\u6496\0\u64c8\0\u64fa\0\u0190"+
    "\0\u652c\0\u0190\0\u0226\0\u655e\0\u0226\0\u6590\0\u65c2\0\u0190"+
    "\0\u079e\0\u65f4\0\u6626\0\u6658\0\u668a\0\u66bc\0\u66ee\0\u0190"+
    "\0\u6720\0\u6752\0\u6784\0\u67b6\0\u67e8\0\u681a\0\u0226\0\u684c"+
    "\0\u687e\0\u68b0\0\u68e2\0\u6914\0\u6946\0\u0190\0\u0226\0\u6978"+
    "\0\u69aa\0\u69dc\0\u6a0e\0\u6a40\0\u0190\0\u0226\0\u6a72\0\u0190"+
    "\0\u0190\0\u6aa4\0\u0226\0\u0226\0\u6ad6\0\u6b08\0\u0226\0\u6b3a"+
    "\0\u6b6c\0\u6b9e\0\u0190\0\u6bd0\0\u0226\0\u0190\0\u0226\0\u6c02"+
    "\0\u6c34\0\u6c66\0\u6c98\0\u6cca\0\u6cfc\0\u6d2e\0\u6d60\0\u6d92"+
    "\0\u6dc4\0\u6df6\0\u6e28\0\u6e5a\0\u6e8c\0\u6ebe\0\u6ef0\0\u6f22"+
    "\0\u6f54\0\u6f86\0\u6fb8\0\u6fea\0\u701c\0\u704e\0\u7080\0\u70b2"+
    "\0\u0226\0\u70e4\0\u7116\0\u7148\0\u717a\0\u71ac\0\u71de\0\u7210"+
    "\0\u7242\0\u7274\0\u0226\0\u72a6\0\u72d8\0\u730a\0\u733c\0\u736e"+
    "\0\u73a0\0\u73d2\0\u7404\0\u7436\0\u7468\0\u749a\0\u74cc\0\u74fe"+
    "\0\u7530\0\u0190\0\u0226\0\u7562\0\u7594\0\u75c6\0\u75f8\0\u0190"+
    "\0\u0226\0\u762a\0\u765c\0\u768e\0\u0226\0\u76c0\0\u76f2\0\u7724"+
    "\0\u7756\0\u7788\0\u77ba\0\u77ec\0\u781e\0\u7850\0\u7882\0\u78b4"+
    "\0\u78e6\0\u7918\0\u794a\0\u797c\0\u79ae\0\u79e0\0\u7a12\0\u7a44"+
    "\0\u0190\0\u0226\0\u7a76\0\u7aa8\0\u7ada\0\u7b0c\0\u0190\0\u0226"+
    "\0\u7b3e\0\u7b70\0\u0190\0\u7ba2\0\u7bd4\0\u7c06\0\u0226\0\u7c38"+
    "\0\u7c6a\0\u7c9c\0\u7cce\0\u7d00\0\u7d32\0\u7d64\0\u7d96\0\u0190"+
    "\0\u0226\0\u7dc8\0\u0190\0\u7dfa\0\u0226\0\u7e2c\0\u7e5e\0\u7e90"+
    "\0\u7ec2\0\u7ef4\0\u7f26\0\u7f58\0\u7f8a\0\u7fbc\0\u7fee\0\u8020"+
    "\0\u8052\0\u8084\0\u80b6\0\u80e8\0\u811a\0\u814c\0\u817e\0\u81b0"+
    "\0\u0190\0\u81e2\0\u0226\0\u8214\0\u8246\0\u8278\0\u82aa\0\u82dc"+
    "\0\u830e\0\u8340\0\u8372\0\u83a4\0\u83d6\0\u8408\0\u843a\0\u0190"+
    "\0\u846c\0\u849e\0\u84d0\0\u8502\0\u8534\0\u0226\0\u8566\0\u8598"+
    "\0\u85ca\0\u85fc\0\u0190\0\u0226\0\u862e\0\u8660\0\u0190\0\u0226"+
    "\0\u0226\0\u8692\0\u86c4\0\u86f6\0\u8728\0\u0190\0\u875a\0\u878c"+
    "\0\u0226\0\u87be\0\u87f0\0\u8822\0\u8854\0\u8886\0\u88b8\0\u88ea"+
    "\0\u891c\0\u0190\0\u0226\0\u894e\0\u8980\0\u89b2\0\u89e4\0\u8a16"+
    "\0\u0226\0\u8a48\0\u8a7a\0\u8aac\0\u8ade\0\u8b10\0\u8b42\0\u8b74"+
    "\0\u0226\0\u8ba6\0\u8bd8\0\u8c0a\0\u8c3c\0\u8c6e\0\u8ca0\0\u8cd2"+
    "\0\u8d04\0\u8d36\0\u8d68\0\u8d9a\0\u8dcc\0\u8dfe\0\u8e30\0\u8e62"+
    "\0\u8e94\0\u8ec6\0\u8ef8\0\u8f2a\0\u8f5c\0\u0190\0\u8f8e\0\u8fc0"+
    "\0\u8ff2\0\u9024\0\u0226\0\u9056\0\u0226\0\u9088\0\u90ba\0\u90ec"+
    "\0\u911e\0\u9150\0\u0190\0\u9182\0\u0226\0\u91b4\0\u91e6\0\u9218"+
    "\0\u924a\0\u927c\0\u92ae\0\u92e0\0\u9312\0\u9344\0\u9376\0\u93a8"+
    "\0\u93da\0\u940c\0\u943e\0\u9470\0\u0190\0\u0226\0\u94a2\0\u0190"+
    "\0\u0226\0\u94d4\0\u9506\0\u9538\0\u956a\0\u0190\0\u0226\0\u959c"+
    "\0\u95ce\0\u0190\0\u0226\0\u9600\0\u9632\0\u9664\0\u9696\0\u96c8"+
    "\0\u96fa\0\u972c\0\u975e\0\u9790\0\u97c2\0\u97f4\0\u0190\0\u9826"+
    "\0\u9858\0\u988a\0\u0226\0\u98bc\0\u98ee\0\u9920\0\u0190\0\u0226"+
    "\0\u0190\0\u0226\0\u9952\0\u0190\0\u0226\0\u9984\0\u99b6\0\u99e8"+
    "\0\u9a1a\0\u9a4c\0\u9a7e\0\u9ab0\0\u9ae2\0\u9b14\0\u9b46\0\u9b78"+
    "\0\u9baa\0\u9bdc\0\u9c0e\0\u9c40\0\u9c72\0\u9ca4\0\u9cd6\0\u9d08"+
    "\0\u9d3a\0\u9d6c\0\u9d9e\0\u9dd0\0\u9e02\0\u9e34\0\u9e66\0\u9e98"+
    "\0\u9eca\0\u9efc\0\u0190\0\u9f2e\0\u9f60\0\u0226\0\u9f92\0\u9fc4"+
    "\0\u9ff6\0\ua028\0\ua05a\0\ua08c\0\u0190\0\u0226\0\ua0be\0\ua0f0"+
    "\0\ua122\0\ua154\0\ua186\0\ua1b8\0\ua1ea\0\ua21c\0\ua24e\0\u0190"+
    "\0\u0226\0\ua280\0\ua2b2\0\u0190\0\u0226\0\u0190\0\u0226\0\ua2e4"+
    "\0\ua316\0\ua348\0\ua37a\0\ua3ac\0\ua3de\0\u0190\0\ua410\0\u0226"+
    "\0\ua442\0\ua474\0\ua4a6\0\ua4d8\0\ua50a\0\u0190\0\u0226\0\u0190"+
    "\0\u0226\0\u0226\0\u0190\0\u0226\0\ua53c\0\ua56e\0\ua5a0\0\ua5d2"+
    "\0\ua604\0\ua636\0\ua668\0\ua69a\0\ua6cc\0\ua6fe\0\ua730\0\ua762"+
    "\0\ua794\0\ua7c6\0\ua7f8\0\ua82a\0\ua85c\0\ua88e\0\ua8c0\0\ua8f2"+
    "\0\ua924\0\ua956\0\ua988\0\ua9ba\0\ua9ec\0\uaa1e\0\uaa50\0\uaa82"+
    "\0\uaab4\0\uaae6\0\uab18\0\uab4a\0\uab7c\0\uabae\0\uabe0\0\uac12"+
    "\0\uac44\0\u0190\0\u0226\0\uac76\0\u0190\0\u0226\0\uaca8\0\uacda"+
    "\0\uad0c\0\uad3e\0\uad70\0\uada2\0\uadd4\0\uae06\0\uae38\0\uae6a"+
    "\0\uae9c\0\uaece\0\uaf00\0\uaf32\0\uaf64\0\uaf96\0\uafc8\0\u0190"+
    "\0\u0226\0\u0190\0\u0226\0\uaffa\0\ub02c\0\ub05e\0\ub090\0\u0190"+
    "\0\u0226\0\ub0c2\0\ub0f4\0\ub126\0\ub158\0\ub18a\0\u0190\0\u0226"+
    "\0\ub1bc\0\ub1ee\0\ub220\0\ub252\0\ub284\0\ub2b6\0\ub2e8\0\ub31a"+
    "\0\ub34c\0\ub37e\0\ub3b0\0\ub3e2\0\ub414\0\ub446\0\ub478\0\ub4aa"+
    "\0\u0190\0\u0226\0\ub4dc\0\ub50e\0\ub540\0\ub572\0\ub5a4\0\ub5d6"+
    "\0\ub608\0\ub63a\0\ub66c\0\ub69e\0\u0226\0\ub6d0\0\ub702\0\ub734"+
    "\0\ub766\0\ub798\0\ub7ca\0\ub7fc\0\ub82e\0\ub860\0\ub892\0\ub8c4"+
    "\0\ub8f6\0\ub928\0\ub95a\0\ub98c\0\ub9be\0\ub9f0\0\uba22\0\uba54"+
    "\0\uba86\0\ubab8\0\ubaea\0\ubb1c\0\ubb4e\0\ubb80\0\ubbb2\0\ubbe4"+
    "\0\ubc16\0\ubc48\0\ubc7a\0\ubcac\0\ubcde\0\u0190\0\u0226\0\ubd10"+
    "\0\ubd42\0\ubd74\0\ubda6\0\ubdd8\0\ube0a\0\ube3c\0\ube6e\0\ubea0"+
    "\0\ubed2\0\ubf04\0\ubf36\0\ubf68\0\ubf9a\0\u0190\0\u0226";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\11\1\12\2\13\1\14\1\15\1\16\1\15\1\17"+
    "\1\20\1\21\4\15\2\22\1\23\1\15\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\15"+
    "\1\45\1\46\1\47\4\15\1\50\1\15\1\51\1\52"+
    "\1\0\1\13\11\53\1\54\3\53\1\55\44\53\12\56"+
    "\1\54\2\56\1\55\44\56\1\11\1\12\2\13\5\57"+
    "\1\20\1\21\12\57\1\11\6\57\1\11\11\57\1\11"+
    "\7\57\1\60\1\61\1\0\1\13\1\11\1\12\2\13"+
    "\5\57\1\20\1\21\12\57\1\62\1\63\5\57\1\11"+
    "\4\57\1\64\4\57\1\11\7\57\1\60\1\61\1\0"+
    "\1\13\1\11\1\12\2\13\5\65\1\20\1\21\4\65"+
    "\1\11\5\65\1\11\6\65\1\11\11\65\1\11\7\65"+
    "\1\60\1\61\1\0\1\13\1\11\1\0\2\11\3\66"+
    "\4\11\6\66\37\11\2\0\1\11\1\12\2\13\21\57"+
    "\1\11\6\57\1\11\11\57\1\11\7\57\1\60\1\61"+
    "\1\0\1\13\64\0\1\13\63\0\1\15\1\67\17\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\4\0\1\70"+
    "\1\12\1\13\1\70\21\16\1\70\6\16\1\70\11\16"+
    "\1\70\7\16\4\70\10\0\1\17\3\0\1\71\4\0"+
    "\1\17\1\72\47\0\1\17\10\0\1\23\50\0\1\73"+
    "\3\0\1\71\4\0\1\73\1\72\43\0\20\15\1\74"+
    "\1\0\3\15\1\75\1\76\1\77\1\0\2\15\1\100"+
    "\6\15\1\0\7\15\10\0\17\15\1\101\1\15\1\0"+
    "\1\15\1\102\4\15\1\0\11\15\1\0\7\15\26\0"+
    "\1\103\7\0\1\104\1\0\2\105\2\0\1\106\1\107"+
    "\3\0\1\110\20\0\16\15\1\111\2\15\1\0\4\15"+
    "\1\112\1\15\1\105\1\113\2\15\1\114\1\115\3\15"+
    "\1\116\1\0\7\15\10\0\21\15\1\0\3\15\1\117"+
    "\2\15\1\0\3\15\1\120\1\15\1\121\1\122\2\15"+
    "\1\0\7\15\10\0\16\15\1\123\1\124\1\15\1\0"+
    "\1\15\1\125\4\15\1\126\1\127\10\15\1\0\7\15"+
    "\10\0\21\15\1\130\1\131\5\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\11\15\1\0"+
    "\1\15\1\132\5\15\10\0\21\15\1\0\1\15\1\133"+
    "\1\134\3\15\1\135\1\136\10\15\1\0\7\15\55\0"+
    "\1\137\14\0\21\15\1\0\6\15\1\0\11\15\1\0"+
    "\2\15\1\140\4\15\10\0\16\15\1\141\2\15\1\0"+
    "\6\15\1\142\1\143\10\15\1\0\7\15\10\0\16\15"+
    "\1\144\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\16\15\1\145\2\15\1\0\1\15\1\146\4\15"+
    "\1\147\1\150\10\15\1\0\7\15\10\0\17\15\1\151"+
    "\1\15\1\0\1\15\1\152\1\153\1\154\1\15\1\155"+
    "\1\156\1\157\4\15\1\160\3\15\1\0\7\15\10\0"+
    "\16\15\1\161\2\15\1\0\1\15\1\162\1\15\1\163"+
    "\2\15\1\0\11\15\1\0\7\15\10\0\17\15\1\164"+
    "\1\15\1\0\1\15\1\165\1\166\3\15\1\167\1\170"+
    "\4\15\1\171\3\15\1\0\7\15\10\0\21\15\1\0"+
    "\1\15\1\172\4\15\1\0\11\15\1\0\7\15\26\0"+
    "\1\173\43\0\16\15\1\174\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\175"+
    "\1\176\4\15\1\177\3\15\1\0\7\15\4\0\11\53"+
    "\1\0\3\53\1\0\44\53\12\56\1\0\2\56\1\0"+
    "\44\56\4\0\21\57\1\0\6\57\1\0\11\57\1\0"+
    "\7\57\40\0\2\200\30\0\21\57\1\0\6\57\1\200"+
    "\1\201\10\57\1\0\7\57\10\0\21\57\1\0\5\57"+
    "\1\202\1\0\11\57\1\0\7\57\10\0\13\65\1\0"+
    "\5\65\1\0\6\65\1\0\11\65\1\0\7\65\4\0"+
    "\4\203\1\204\1\15\17\204\1\203\6\204\1\203\11\204"+
    "\1\203\7\204\4\203\1\70\1\12\1\13\57\70\10\0"+
    "\1\205\10\0\1\205\50\0\1\206\6\0\2\207\1\210"+
    "\44\0\21\15\1\211\1\212\5\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\213\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\4\15\1\214"+
    "\1\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\4\15\1\215\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\17\15\1\216\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\5\15\1\217\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\3\15\1\220\2\15"+
    "\1\0\11\15\1\0\7\15\31\0\2\221\56\0\1\222"+
    "\16\0\1\223\56\0\1\224\4\0\1\225\40\0\1\226"+
    "\61\0\1\227\61\0\1\230\3\0\1\231\36\0\21\15"+
    "\1\221\1\232\5\15\1\0\11\15\1\0\7\15\10\0"+
    "\17\15\1\233\1\15\1\0\6\15\1\0\5\15\1\234"+
    "\3\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\2\15\1\235\4\15\1\236\1\15\1\0\7\15\10\0"+
    "\17\15\1\237\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\17\15\1\240\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\17\15\1\241\1\15\1\0"+
    "\1\15\1\242\4\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\4\15\1\243\1\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\7\15\1\244"+
    "\1\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\6\15\1\245\2\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\246\5\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\1\15\1\247"+
    "\5\15\10\0\21\15\1\0\5\15\1\250\1\0\2\15"+
    "\1\251\6\15\1\0\7\15\30\0\1\252\41\0\20\15"+
    "\1\253\1\0\6\15\1\0\11\15\1\0\7\15\26\0"+
    "\1\254\43\0\16\15\1\255\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\256\4\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\257\5\15\1\0\2\15\1\260"+
    "\4\15\10\0\16\15\1\261\1\262\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\46\0\1\263\23\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\264\3\15\1\0\7\15"+
    "\27\0\1\265\42\0\17\15\1\266\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\267\3\15\1\0\7\15\27\0\1\270"+
    "\42\0\17\15\1\271\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\272\5\15\1\0\7\15\10\0\21\15\1\0\4\15"+
    "\1\273\1\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\274\1\15\1\275\3\15"+
    "\1\0\7\15\44\0\1\276\25\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\277\5\15\1\0\7\15\10\0\21\15"+
    "\1\0\4\15\1\300\1\15\1\0\5\15\1\301\1\15"+
    "\1\302\1\15\1\0\7\15\10\0\21\15\1\303\1\304"+
    "\1\15\1\305\3\15\1\0\11\15\1\0\5\15\1\306"+
    "\1\15\10\0\17\15\1\307\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\2\15\1\310"+
    "\3\15\1\0\11\15\1\0\7\15\10\0\20\15\1\311"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\44\0\1\312"+
    "\25\0\21\15\1\0\6\15\1\0\3\15\1\313\5\15"+
    "\1\0\7\15\10\0\16\15\1\314\2\15\1\0\1\15"+
    "\1\315\4\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\316\1\317\4\15\1\320\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\3\15\1\321\1\322\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\2\15\1\323"+
    "\3\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\324\5\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\325\3\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\326\1\327\10\15"+
    "\1\0\7\15\56\0\1\330\13\0\21\15\1\0\6\15"+
    "\1\0\11\15\1\0\3\15\1\331\3\15\10\0\21\15"+
    "\1\0\1\15\1\332\4\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\333\1\334\5\15\1\0\5\15\1\335"+
    "\3\15\1\0\7\15\26\0\1\336\43\0\16\15\1\337"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\340\1\0\1\341\1\0\1\342\21\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\343\1\15\1\344\1\15\1\345"+
    "\1\15\1\0\7\15\10\0\21\15\1\0\6\15\1\346"+
    "\1\347\10\15\1\0\7\15\43\0\1\350\26\0\21\57"+
    "\1\0\6\57\1\0\2\57\1\351\6\57\1\0\7\57"+
    "\10\0\20\57\1\352\1\0\6\57\1\0\11\57\1\0"+
    "\7\57\4\0\5\203\1\353\60\203\1\204\1\354\17\204"+
    "\1\203\6\204\1\203\11\204\1\203\7\204\4\203\10\0"+
    "\1\205\10\0\1\205\1\72\47\0\1\206\10\0\1\206"+
    "\50\0\1\206\10\0\1\210\67\0\1\355\36\0\21\15"+
    "\1\0\1\15\1\356\4\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\1\15\1\357\4\15\1\0\11\15"+
    "\1\0\7\15\10\0\17\15\1\360\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\361\1\362\10\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\363\1\364\10\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\365\1\366\6\15\10\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\367\5\15\1\0"+
    "\7\15\31\0\2\370\75\0\1\371\50\0\1\372\2\0"+
    "\2\373\64\0\1\374\43\0\1\375\100\0\1\376\62\0"+
    "\1\377\60\0\1\u0100\56\0\1\u0101\27\0\21\15\1\370"+
    "\1\u0102\5\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0103\3\15\1\0\7\15"+
    "\10\0\21\15\1\0\3\15\1\u0104\2\15\1\373\1\u0105"+
    "\10\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u0106\5\15\1\0\7\15\10\0\16\15\1\u0107"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\4\15\1\u0108\4\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\5\15\1\u0109"+
    "\3\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u010a\4\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\1\15\1\u010b\7\15\1\0\7\15\10\0"+
    "\21\15\1\0\2\15\1\u010c\3\15\1\0\11\15\1\0"+
    "\7\15\10\0\16\15\1\u010d\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\2\15\1\u010e\6\15\1\0\7\15\10\0\16\15\1\u010f"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\u0110\1\u0111\6\15"+
    "\10\0\21\15\1\0\6\15\1\u0112\1\u0113\10\15\1\0"+
    "\7\15\46\0\1\u0114\23\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u0115\3\15\1\0\7\15\17\0\1\u0116\52\0"+
    "\7\15\1\u0117\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\16\15\1\u0118\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\u0119\1\u011a\3\15"+
    "\1\u011b\1\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\4\15\1\u011c\4\15\1\0\7\15"+
    "\10\0\17\15\1\u011d\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\u011e\1\u011f\5\15\1\0"+
    "\11\15\1\0\7\15\37\0\1\u0120\32\0\21\15\1\0"+
    "\5\15\1\u0121\1\0\11\15\1\0\7\15\43\0\1\u0122"+
    "\26\0\21\15\1\0\6\15\1\0\2\15\1\u0123\6\15"+
    "\1\0\7\15\10\0\21\15\1\0\4\15\1\u0124\1\15"+
    "\1\0\11\15\1\0\7\15\17\0\1\u0125\11\0\2\u0126"+
    "\37\0\7\15\1\u0127\11\15\1\u0126\1\u0128\5\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u0129\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\5\15\1\u012a\1\15\10\0"+
    "\16\15\1\u012b\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\11\15\1\0"+
    "\2\15\1\u012c\4\15\26\0\1\u012d\43\0\16\15\1\u012e"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\10\15\1\u012f\1\0\7\15"+
    "\10\0\21\15\1\u0130\1\u0131\3\15\1\u0132\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\u0133\1\u0134\5\15"+
    "\1\0\11\15\1\0\7\15\36\0\1\u0135\1\0\2\u0136"+
    "\30\0\21\15\1\0\4\15\1\u0137\1\15\1\u0136\1\u0138"+
    "\10\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\11\15\1\0\1\15\1\u0139\5\15\10\0\16\15\1\u013a"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\5\15\1\u013b\1\0\3\15\1\u013c\5\15"+
    "\1\0\7\15\10\0\21\15\1\0\2\15\1\u013d\3\15"+
    "\1\0\11\15\1\0\7\15\31\0\2\u013e\37\0\21\15"+
    "\1\u013e\1\u013f\5\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\6\15\1\u0140\2\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u0141\1\15\1\0"+
    "\11\15\1\0\7\15\33\0\1\u0142\36\0\21\15\1\0"+
    "\1\15\1\u0143\4\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\4\15\1\u0144\1\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u0145\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\17\15\1\u0146\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\16\15\1\u0147"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\1\15\1\u0148\4\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u0149\1\15\1\0"+
    "\11\15\1\0\7\15\45\0\1\u014a\24\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u014b\4\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u014c\5\15\1\0"+
    "\2\15\1\u014d\4\15\36\0\1\u014e\33\0\21\15\1\0"+
    "\4\15\1\u014f\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\u0150\1\u0151\10\15\1\0\7\15"+
    "\45\0\1\u0152\24\0\21\15\1\0\6\15\1\0\4\15"+
    "\1\u0153\4\15\1\0\7\15\50\0\1\u0154\37\0\1\u0155"+
    "\11\0\2\u0156\56\0\1\u0157\33\0\21\15\1\0\6\15"+
    "\1\0\7\15\1\u0158\1\15\1\0\7\15\10\0\16\15"+
    "\1\u0159\2\15\1\0\6\15\1\u0156\1\u015a\10\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u015b\1\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u015c\33\0\21\15\1\0"+
    "\4\15\1\u015d\1\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\u015e\25\0\21\57\1\0\6\57\1\0\3\57\1\u015f"+
    "\5\57\1\0\7\57\4\0\4\203\1\13\1\353\60\203"+
    "\1\15\1\354\17\204\1\203\6\204\1\203\11\204\1\203"+
    "\7\204\4\203\30\0\1\u0160\35\0\21\15\1\0\2\15"+
    "\1\u0161\3\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0162\3\15\1\0\7\15"+
    "\10\0\21\15\1\0\5\15\1\u0163\1\0\11\15\1\0"+
    "\7\15\42\0\1\u0164\27\0\21\15\1\0\6\15\1\0"+
    "\1\15\1\u0165\7\15\1\0\7\15\44\0\1\u0166\25\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u0167\5\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\7\15\1\u0168"+
    "\1\15\1\0\7\15\40\0\2\u0169\56\0\1\u016a\62\0"+
    "\1\u016b\66\0\1\u016c\44\0\1\u016d\51\0\1\u016e\70\0"+
    "\1\u016f\61\0\1\u0170\61\0\1\u0171\43\0\21\15\1\0"+
    "\6\15\1\u0169\1\u0172\10\15\1\0\7\15\10\0\21\15"+
    "\1\0\4\15\1\u0173\1\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\5\15\1\u0174\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\3\15\1\u0175"+
    "\5\15\1\0\7\15\10\0\17\15\1\u0176\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\7\15\1\u0177"+
    "\11\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\16\15\1\u0178\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\16\15\1\u0179\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u017a\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\u017b\1\u017c\10\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u017d\3\15\1\0\7\15"+
    "\10\0\21\15\1\0\4\15\1\u017e\1\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\5\15"+
    "\1\u017f\3\15\1\0\7\15\17\0\1\u0180\52\0\7\15"+
    "\1\u0181\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\37\0\1\u0182\32\0\21\15\1\0\5\15\1\u0183\1\0"+
    "\11\15\1\0\7\15\27\0\1\u0184\42\0\17\15\1\u0185"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\34\0"+
    "\1\u0186\5\0\1\u0187\1\0\1\u0188\25\0\21\15\1\0"+
    "\2\15\1\u0189\3\15\1\0\1\15\1\u018a\1\15\1\u018b"+
    "\5\15\1\0\7\15\36\0\1\u018c\33\0\21\15\1\0"+
    "\4\15\1\u018d\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u018e\3\15\1\0"+
    "\7\15\10\0\21\15\1\0\1\15\1\u018f\4\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u0190\3\15\1\0\7\15\31\0\2\u0191\37\0"+
    "\21\15\1\u0191\1\u0192\5\15\1\0\11\15\1\0\7\15"+
    "\34\0\1\u0193\1\u0194\34\0\21\15\1\0\2\15\1\u0195"+
    "\1\u0196\2\15\1\0\11\15\1\0\7\15\26\0\1\u0197"+
    "\43\0\16\15\1\u0198\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\u0199\1\u019a"+
    "\10\15\1\0\7\15\27\0\1\u019b\7\0\1\u019c\6\0"+
    "\1\u019d\3\0\2\u019e\16\0\17\15\1\u019f\1\15\1\0"+
    "\5\15\1\u01a0\1\0\5\15\1\u01a1\3\15\1\u019e\1\u01a2"+
    "\6\15\10\0\21\15\1\0\6\15\1\0\5\15\1\u01a3"+
    "\3\15\1\0\7\15\10\0\21\15\1\0\1\15\1\u01a4"+
    "\4\15\1\0\11\15\1\0\7\15\10\0\17\15\1\u01a5"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\1\u01a6\33\0\21\15\1\0\4\15\1\u01a7\1\15\1\0"+
    "\11\15\1\0\7\15\26\0\1\u01a8\43\0\16\15\1\u01a9"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\7\15\1\u01aa\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\36\0\1\u01ab\33\0\21\15\1\0\4\15\1\u01ac"+
    "\1\15\1\0\11\15\1\0\7\15\46\0\1\u01ad\51\0"+
    "\1\u01ae\33\0\21\15\1\0\6\15\1\0\5\15\1\u01af"+
    "\3\15\1\0\7\15\10\0\21\15\1\0\4\15\1\u01b0"+
    "\1\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\2\15\1\u01b1\3\15\1\0\2\15\1\u01b2\6\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\5\15\1\u01b3"+
    "\3\15\1\0\7\15\10\0\16\15\1\u01b4\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\16\15\1\u01b5"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\7\15\1\u01b6\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\16\15\1\u01b7\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u01b8\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\34\0\1\u01b9\35\0"+
    "\21\15\1\0\2\15\1\u01ba\3\15\1\0\11\15\1\0"+
    "\7\15\10\0\17\15\1\u01bb\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u01bc\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\4\15\1\u01bd\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\u01be\1\u01bf\5\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\3\15\1\u01c0\2\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\1\15\1\u01c1\5\15\17\0\1\u01c2\52\0\7\15"+
    "\1\u01c3\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\4\15\1\u01c4\1\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\4\15\1\u01c5\1\15"+
    "\1\0\11\15\1\0\7\15\17\0\1\u01c6\52\0\7\15"+
    "\1\u01c7\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\57\0\1\u01c8\12\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\4\15\1\u01c9\2\15\33\0\1\u01ca\36\0\21\15"+
    "\1\0\1\15\1\u01cb\4\15\1\0\11\15\1\0\7\15"+
    "\33\0\1\u01cc\45\0\1\u01cd\106\0\1\u01ce\66\0\1\u01cf"+
    "\20\0\21\15\1\0\1\15\1\u01d0\4\15\1\0\11\15"+
    "\1\0\7\15\10\0\7\15\1\u01d1\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u01d2\5\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\10\15\1\u01d3\1\0\7\15\26\0"+
    "\1\u01d4\43\0\16\15\1\u01d5\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\27\0\1\u01d6\42\0\17\57\1\u01d7"+
    "\1\57\1\0\6\57\1\0\11\57\1\0\7\57\35\0"+
    "\1\u01d8\34\0\21\15\1\0\3\15\1\u01d9\2\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\1\15\1\u01da"+
    "\4\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\10\15\1\u01db\1\0\7\15\26\0\1\u01dc"+
    "\43\0\16\15\1\u01dd\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\31\0\2\u01de\37\0\21\15\1\u01de\1\u01df"+
    "\5\15\1\0\11\15\1\0\7\15\10\0\17\15\1\u01e0"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\33\0"+
    "\1\u01e1\45\0\1\u01e2\100\0\1\u01e3\66\0\1\u01e4\52\0"+
    "\1\u01e5\54\0\1\u01e6\51\0\1\u01e7\52\0\21\15\1\0"+
    "\1\15\1\u01e8\4\15\1\0\11\15\1\0\7\15\10\0"+
    "\7\15\1\u01e9\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u01ea\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\2\15\1\u01eb\6\15\1\0\7\15\10\0\21\15\1\0"+
    "\2\15\1\u01ec\3\15\1\0\11\15\1\0\7\15\10\0"+
    "\17\15\1\u01ed\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\7\15\1\u01ee\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\44\0\1\u01ef\25\0\21\15\1\0"+
    "\6\15\1\0\3\15\1\u01f0\5\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\10\15\1\u01f1\1\0\7\15"+
    "\10\0\7\15\1\u01f2\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\36\0\1\u01f3\33\0\21\15\1\0\4\15"+
    "\1\u01f4\1\15\1\0\11\15\1\0\7\15\27\0\1\u01f5"+
    "\42\0\17\15\1\u01f6\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\46\0\1\u01f7\23\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u01f8\3\15\1\0\7\15\27\0\1\u01f9"+
    "\72\0\2\u01fa\46\0\1\u01fb\43\0\17\15\1\u01fc\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\u01fa\1\u01fd\10\15\1\0\7\15\10\0"+
    "\16\15\1\u01fe\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\27\0\1\u01ff\42\0\17\15\1\u0200\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\1\15\1\u0201\4\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u0202\5\15\1\0"+
    "\7\15\10\0\17\15\1\u0203\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\17\0\1\u0204\6\0\1\u0205\43\0"+
    "\7\15\1\u0206\6\15\1\u0207\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\26\0\1\u0208\73\0\2\u0209\30\0"+
    "\16\15\1\u020a\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\u0209\1\u020b\10\15"+
    "\1\0\7\15\37\0\1\u020c\32\0\21\15\1\0\5\15"+
    "\1\u020d\1\0\11\15\1\0\7\15\36\0\1\u020e\56\0"+
    "\1\u020f\63\0\1\u0210\52\0\1\u0211\43\0\21\15\1\0"+
    "\4\15\1\u0212\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\1\15\1\u0213\4\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\3\15\1\u0214\2\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u0215\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\17\15\1\u0216"+
    "\1\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u0217\3\15\1\0"+
    "\7\15\10\0\21\15\1\0\2\15\1\u0218\3\15\1\0"+
    "\11\15\1\0\7\15\54\0\1\u0219\15\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\1\15\1\u021a\5\15\46\0"+
    "\1\u021b\23\0\21\15\1\0\6\15\1\0\5\15\1\u021c"+
    "\3\15\1\0\7\15\10\0\21\15\1\0\2\15\1\u021d"+
    "\3\15\1\0\11\15\1\0\7\15\27\0\1\u021e\42\0"+
    "\17\15\1\u021f\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\33\0\1\u0220\66\0\2\u0221\30\0\21\15\1\0"+
    "\1\15\1\u0222\4\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\u0221\1\u0223\10\15\1\0\7\15"+
    "\10\0\21\15\1\0\6\15\1\u0224\1\u0225\10\15\1\0"+
    "\7\15\10\0\21\15\1\0\1\15\1\u0226\4\15\1\0"+
    "\11\15\1\0\7\15\10\0\7\15\1\u0227\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\2\15\1\u0228\4\15\10\0"+
    "\7\15\1\u0229\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u022a\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u022b\3\15\1\0\7\15\10\0\21\15\1\0"+
    "\5\15\1\u022c\1\0\11\15\1\0\7\15\35\0\1\u022d"+
    "\34\0\21\15\1\0\3\15\1\u022e\2\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\u022f\5\15\1\0\7\15\10\0\21\15\1\u0230\1\u0231"+
    "\5\15\1\0\11\15\1\0\7\15\10\0\16\15\1\u0232"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\4\15\1\u0233\1\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\6\15\1\u0234"+
    "\2\15\1\0\7\15\31\0\2\u0235\37\0\21\15\1\u0235"+
    "\1\u0236\5\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\1\15\1\u0237\4\15\1\0\11\15\1\0\7\15"+
    "\37\0\1\u0238\2\0\1\u0239\27\0\21\15\1\0\5\15"+
    "\1\u023a\1\0\1\15\1\u023b\7\15\1\0\7\15\33\0"+
    "\1\u023c\36\0\21\15\1\0\1\15\1\u023d\4\15\1\0"+
    "\11\15\1\0\7\15\35\0\1\u023e\34\0\21\15\1\0"+
    "\3\15\1\u023f\2\15\1\0\11\15\1\0\7\15\60\0"+
    "\1\u0240\53\0\2\u0241\51\0\1\u0242\26\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\5\15\1\u0243\1\15\10\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\u0241\1\u0244\6\15"+
    "\10\0\21\15\1\0\6\15\1\0\2\15\1\u0245\6\15"+
    "\1\0\7\15\17\0\1\u0246\52\0\7\15\1\u0247\11\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\34\0\1\u0248"+
    "\35\0\21\57\1\0\2\57\1\u0249\3\57\1\0\11\57"+
    "\1\0\7\57\36\0\1\u024a\33\0\21\15\1\0\4\15"+
    "\1\u024b\1\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\3\15\1\u024c\2\15\1\0\11\15\1\0\7\15"+
    "\36\0\1\u024d\33\0\21\15\1\0\4\15\1\u024e\1\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u024f\3\15\1\0\7\15\44\0\1\u0250"+
    "\62\0\1\u0251\1\u0252\50\0\1\u0253\43\0\1\u0254\106\0"+
    "\1\u0255\64\0\1\u0256\22\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u0257\5\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u0258\1\u0259\3\15\1\0\7\15"+
    "\10\0\21\15\1\0\3\15\1\u025a\2\15\1\0\11\15"+
    "\1\0\7\15\10\0\7\15\1\u025b\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u025c\5\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\6\15\1\u025d\2\15\1\0\7\15"+
    "\26\0\1\u025e\43\0\16\15\1\u025f\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u0260\3\15\1\0\7\15\54\0\1\u0261"+
    "\15\0\21\15\1\0\6\15\1\0\11\15\1\0\1\15"+
    "\1\u0262\5\15\34\0\1\u0263\35\0\21\15\1\0\2\15"+
    "\1\u0264\3\15\1\0\11\15\1\0\7\15\54\0\1\u0265"+
    "\15\0\21\15\1\0\6\15\1\0\11\15\1\0\1\15"+
    "\1\u0266\5\15\54\0\1\u0267\34\0\1\u0268\70\0\1\u0269"+
    "\33\0\21\15\1\0\6\15\1\0\11\15\1\0\1\15"+
    "\1\u026a\5\15\10\0\17\15\1\u026b\1\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\4\15"+
    "\1\u026c\1\15\1\0\11\15\1\0\7\15\44\0\1\u026d"+
    "\25\0\21\15\1\0\6\15\1\0\3\15\1\u026e\5\15"+
    "\1\0\7\15\10\0\21\15\1\0\2\15\1\u026f\3\15"+
    "\1\0\11\15\1\0\7\15\10\0\16\15\1\u0270\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\u0271\5\15\1\0\7\15"+
    "\37\0\1\u0272\53\0\2\u0273\37\0\21\15\1\0\5\15"+
    "\1\u0274\1\0\11\15\1\0\7\15\10\0\21\15\1\u0273"+
    "\1\u0275\5\15\1\0\11\15\1\0\7\15\36\0\1\u0276"+
    "\33\0\21\15\1\0\4\15\1\u0277\1\15\1\0\11\15"+
    "\1\0\7\15\27\0\1\u0278\42\0\17\15\1\u0279\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\17\0\1\u027a"+
    "\73\0\2\u027b\63\0\1\u027c\53\0\1\u027d\43\0\7\15"+
    "\1\u027e\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\u027b\1\u027f\5\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\2\15\1\u0280\3\15\1\0"+
    "\11\15\1\0\7\15\10\0\16\15\1\u0281\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\4\15\1\u0282\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\u0283\1\u0284\6\15"+
    "\17\0\1\u0285\52\0\7\15\1\u0286\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\u0287\1\u0288\10\15\1\0\7\15\37\0\1\u0289\32\0"+
    "\21\15\1\0\5\15\1\u028a\1\0\11\15\1\0\7\15"+
    "\35\0\1\u028b\57\0\1\u028c\36\0\21\15\1\0\3\15"+
    "\1\u028d\2\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\1\15\1\u028e\4\15\1\0\11\15\1\0\7\15"+
    "\44\0\1\u028f\25\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\u0290\5\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\0\3\15\1\u0291\5\15\1\0\7\15\10\0\21\15"+
    "\1\0\5\15\1\u0292\1\0\11\15\1\u0293\1\u0294\6\15"+
    "\10\0\16\15\1\u0295\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\1\15"+
    "\1\u0296\7\15\1\0\7\15\10\0\21\15\1\0\6\15"+
    "\1\u0297\1\u0298\10\15\1\0\7\15\10\0\16\15\1\u0299"+
    "\2\15\1\0\6\15\1\0\5\15\1\u029a\3\15\1\0"+
    "\7\15\10\0\21\15\1\0\4\15\1\u029b\1\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u029c\33\0\21\15\1\0"+
    "\4\15\1\u029d\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\2\15\1\u029e\6\15\1\0"+
    "\7\15\10\0\7\15\1\u029f\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\u02a0"+
    "\1\u02a1\10\15\1\0\7\15\36\0\1\u02a2\33\0\21\15"+
    "\1\0\4\15\1\u02a3\1\15\1\0\11\15\1\0\7\15"+
    "\27\0\1\u02a4\60\0\1\u02a5\43\0\17\15\1\u02a6\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\16\15"+
    "\1\u02a7\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\44\0\1\u02a8\25\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\u02a9\5\15\1\0\7\15\36\0\1\u02aa\33\0\21\15"+
    "\1\0\4\15\1\u02ab\1\15\1\0\11\15\1\0\7\15"+
    "\26\0\1\u02ac\43\0\16\15\1\u02ad\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\46\0\1\u02ae\23\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u02af\3\15\1\0\7\15"+
    "\26\0\1\u02b0\43\0\16\15\1\u02b1\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\4\15"+
    "\1\u02b2\1\15\1\0\11\15\1\0\7\15\17\0\1\u02b3"+
    "\52\0\7\15\1\u02b4\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\0\11\15"+
    "\1\0\1\15\1\u02b5\5\15\27\0\1\u02b6\72\0\2\u02b7"+
    "\66\0\1\u02b8\74\0\1\u02b9\43\0\1\u02ba\56\0\2\u02bb"+
    "\30\0\17\15\1\u02bc\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\6\15\1\u02b7\1\u02bd"+
    "\10\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u02be\3\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\6\15\1\u02bf\10\0\21\15"+
    "\1\0\6\15\1\0\2\15\1\u02c0\6\15\1\0\7\15"+
    "\10\0\21\15\1\0\6\15\1\u02bb\1\u02c1\10\15\1\0"+
    "\7\15\10\0\21\15\1\0\3\15\1\u02c2\2\15\1\0"+
    "\11\15\1\0\7\15\45\0\1\u02c3\24\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u02c4\4\15\1\0\7\15\17\0"+
    "\1\u02c5\52\0\7\15\1\u02c6\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\26\0\1\u02c7\43\0\16\15\1\u02c8"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\1\u02c9\33\0\21\15\1\0\4\15\1\u02ca\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u02cb\5\15\1\0\7\15\10\0\21\15\1\0"+
    "\5\15\1\u02cc\1\0\11\15\1\0\7\15\34\0\1\u02cd"+
    "\35\0\21\15\1\0\2\15\1\u02ce\3\15\1\0\11\15"+
    "\1\0\7\15\34\0\1\u02cf\35\0\21\15\1\0\2\15"+
    "\1\u02d0\3\15\1\0\11\15\1\0\7\15\31\0\2\u02d1"+
    "\65\0\1\u02d2\51\0\1\u02d3\100\0\1\u02d4\24\0\21\15"+
    "\1\u02d1\1\u02d5\5\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\4\15\1\u02d6\1\15\1\0\11\15\1\0"+
    "\7\15\10\0\16\15\1\u02d7\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u02d8\4\15\1\0\7\15\10\0\16\15\1\u02d9"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\17\0"+
    "\1\u02da\52\0\7\15\1\u02db\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\50\0\1\u02dc\21\0\21\15\1\0"+
    "\6\15\1\0\7\15\1\u02dd\1\15\1\0\7\15\30\0"+
    "\1\u02de\41\0\20\15\1\u02df\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\52\0\2\u02e0\16\0\21\15\1\0\6\15"+
    "\1\0\11\15\1\u02e0\1\u02e1\6\15\36\0\1\u02e2\67\0"+
    "\1\u02e3\25\0\21\15\1\0\4\15\1\u02e4\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u02e5\5\15\1\0\7\15\26\0\1\u02e6\43\0"+
    "\16\15\1\u02e7\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\1\15\1\u02e8\4\15\1\0"+
    "\11\15\1\0\7\15\26\0\1\u02e9\43\0\16\15\1\u02ea"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u02eb\5\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\u02ec\1\u02ed\10\15"+
    "\1\0\7\15\43\0\1\u02ee\26\0\21\15\1\0\6\15"+
    "\1\0\2\15\1\u02ef\6\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\7\15\1\u02f0\1\15\1\0\7\15"+
    "\10\0\16\15\1\u0299\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\40\0\2\u02f1\30\0\21\15\1\0\6\15"+
    "\1\u02f1\1\u02f2\10\15\1\0\7\15\10\0\21\15\1\0"+
    "\2\15\1\u02f3\3\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\6\15\1\u02f4\2\15\1\0"+
    "\7\15\42\0\1\u02f5\27\0\21\15\1\0\6\15\1\0"+
    "\1\15\1\u02f6\7\15\1\0\7\15\54\0\1\u02f7\15\0"+
    "\21\15\1\0\6\15\1\0\11\15\1\0\1\15\1\u02f8"+
    "\5\15\50\0\1\u02f9\57\0\1\u02fa\23\0\21\15\1\0"+
    "\6\15\1\0\7\15\1\u02fb\1\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u02fc\3\15\1\0"+
    "\7\15\36\0\1\u02fd\33\0\21\15\1\0\4\15\1\u02fe"+
    "\1\15\1\0\11\15\1\0\7\15\26\0\1\u02ff\43\0"+
    "\16\15\1\u0300\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\26\0\1\u0301\43\0\16\15\1\u0302\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\16\15\1\u0303"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\45\0"+
    "\1\u0304\24\0\21\15\1\0\6\15\1\0\4\15\1\u0305"+
    "\4\15\1\0\7\15\31\0\2\u0306\74\0\1\u0307\42\0"+
    "\1\u0308\70\0\1\u0309\60\0\1\u030a\103\0\1\u030b\13\0"+
    "\21\15\1\u0306\1\u030c\5\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\6\15\1\0\4\15\1\u030d\4\15"+
    "\1\0\7\15\10\0\16\15\1\u030e\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\3\15"+
    "\1\u030f\2\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\2\15\1\u0310\3\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\6\15\1\0\11\15\1\0\3\15"+
    "\1\u0311\3\15\10\0\21\15\1\0\2\15\1\u0312\3\15"+
    "\1\0\11\15\1\0\7\15\26\0\1\u0313\43\0\16\15"+
    "\1\u0314\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\45\0\1\u0315\24\0\21\15\1\0\6\15\1\0\4\15"+
    "\1\u0316\4\15\1\0\7\15\46\0\1\u0317\23\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u0318\3\15\1\0\7\15"+
    "\10\0\21\15\1\0\4\15\1\u0319\1\15\1\0\11\15"+
    "\1\0\7\15\10\0\16\15\1\u031a\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\27\0\1\u031b\42\0\17\15"+
    "\1\u031c\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\55\0\1\u031d\35\0\2\u031e\62\0\1\u031f\36\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\0\2\15\1\u0320\4\15"+
    "\10\0\21\15\1\u031e\1\u0321\5\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\1\15\1\u0322\4\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\7\15\1\u0323\1\15\1\0\7\15\33\0\1\u0324\36\0"+
    "\21\15\1\0\1\15\1\u0325\4\15\1\0\11\15\1\0"+
    "\7\15\26\0\1\u0326\43\0\16\15\1\u0327\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\46\0\1\u0328\23\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u0329\3\15\1\0"+
    "\7\15\26\0\1\u032a\43\0\16\15\1\u032b\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\17\0\1\u032c\52\0"+
    "\7\15\1\u032d\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\3\15\1\u032e"+
    "\5\15\1\0\7\15\26\0\1\u032f\43\0\16\15\1\u0330"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\4\15\1\u0331\1\15\1\0\11\15\1\0"+
    "\7\15\27\0\1\u0332\42\0\17\15\1\u0333\1\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\51\0\1\u0334\20\0"+
    "\21\15\1\0\6\15\1\0\10\15\1\u0335\1\0\7\15"+
    "\10\0\7\15\1\u0336\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\33\0\1\u0337\36\0\21\15\1\0\1\15"+
    "\1\u0338\4\15\1\0\11\15\1\0\7\15\10\0\16\15"+
    "\1\u0339\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\6\15\1\u033a\1\u033b\10\15\1\0"+
    "\7\15\26\0\1\u033c\43\0\16\15\1\u033d\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\34\0\1\u033e\35\0"+
    "\21\15\1\0\2\15\1\u033f\3\15\1\0\11\15\1\0"+
    "\7\15\31\0\2\u0340\37\0\21\15\1\u0340\1\u0341\5\15"+
    "\1\0\11\15\1\0\7\15\27\0\1\u0342\42\0\17\15"+
    "\1\u0343\1\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\45\0\1\u0344\24\0\21\15\1\0\6\15\1\0\4\15"+
    "\1\u0345\4\15\1\0\7\15\31\0\2\u0346\37\0\21\15"+
    "\1\u0346\1\u0347\5\15\1\0\11\15\1\0\7\15\10\0"+
    "\7\15\1\u0348\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\46\0\1\u0349\23\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u034a\3\15\1\0\7\15\31\0\2\u034b\64\0"+
    "\1\u034c\57\0\1\u034d\54\0\1\u034e\61\0\1\u034f\43\0"+
    "\21\15\1\u034b\1\u0350\5\15\1\0\11\15\1\0\7\15"+
    "\10\0\21\15\1\0\3\15\1\u0351\2\15\1\0\11\15"+
    "\1\0\7\15\10\0\21\15\1\0\1\15\1\u0352\4\15"+
    "\1\0\11\15\1\0\7\15\10\0\16\15\1\u0353\2\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\16\15"+
    "\1\u0354\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\16\15\1\u0355\2\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\27\0\1\u0356\42\0\17\15\1\u0357\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\7\15"+
    "\1\u0358\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\31\0\2\u0359\37\0\21\15\1\u0359\1\u035a\5\15\1\0"+
    "\11\15\1\0\7\15\50\0\1\u035b\46\0\1\u035c\34\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u035d\1\15\1\0"+
    "\7\15\10\0\21\15\1\0\3\15\1\u035e\2\15\1\0"+
    "\11\15\1\0\7\15\10\0\7\15\1\u035f\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\35\0\1\u0360\34\0"+
    "\21\15\1\0\3\15\1\u0361\2\15\1\0\11\15\1\0"+
    "\7\15\43\0\1\u0362\26\0\21\15\1\0\6\15\1\0"+
    "\2\15\1\u0363\6\15\1\0\7\15\27\0\1\u0364\42\0"+
    "\17\15\1\u0365\1\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\45\0\1\u0366\24\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u0367\4\15\1\0\7\15\10\0\21\15\1\0"+
    "\4\15\1\u0368\1\15\1\0\11\15\1\0\7\15\45\0"+
    "\1\u0369\24\0\21\15\1\0\6\15\1\0\4\15\1\u036a"+
    "\4\15\1\0\7\15\17\0\1\u036b\52\0\7\15\1\u036c"+
    "\11\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\1\u036d\33\0\21\15\1\0\4\15\1\u036e\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\7\15\1\u036f\1\15\1\0\7\15\44\0\1\u0370\25\0"+
    "\21\15\1\0\6\15\1\0\3\15\1\u0371\5\15\1\0"+
    "\7\15\46\0\1\u0372\23\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u0373\3\15\1\0\7\15\17\0\1\u0374\52\0"+
    "\7\15\1\u0375\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\26\0\1\u0376\43\0\16\15\1\u0377\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\40\0\2\u0378\30\0"+
    "\21\15\1\0\6\15\1\u0378\1\u0379\10\15\1\0\7\15"+
    "\34\0\1\u037a\35\0\21\15\1\0\2\15\1\u037b\3\15"+
    "\1\0\11\15\1\0\7\15\33\0\1\u037c\36\0\21\15"+
    "\1\0\1\15\1\u037d\4\15\1\0\11\15\1\0\7\15"+
    "\33\0\1\u037e\36\0\21\15\1\0\1\15\1\u037f\4\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\u0380\1\u0381"+
    "\5\15\1\0\11\15\1\0\7\15\26\0\1\u0382\43\0"+
    "\16\15\1\u0383\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\17\0\1\u0384\107\0\1\u0385\52\0\1\u0386\73\0"+
    "\1\u0387\21\0\7\15\1\u0388\11\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\6\15\1\0"+
    "\4\15\1\u0389\4\15\1\0\7\15\10\0\21\15\1\0"+
    "\4\15\1\u038a\1\15\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u038b\1\15\1\0"+
    "\7\15\46\0\1\u038c\23\0\21\15\1\0\6\15\1\0"+
    "\5\15\1\u038d\3\15\1\0\7\15\10\0\21\15\1\0"+
    "\5\15\1\u038e\1\0\11\15\1\0\7\15\31\0\2\u038f"+
    "\37\0\21\15\1\u038f\1\u0390\5\15\1\0\11\15\1\0"+
    "\7\15\36\0\1\u0391\33\0\21\15\1\0\4\15\1\u0392"+
    "\1\15\1\0\11\15\1\0\7\15\10\0\20\15\1\u0393"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\36\0\1\u0394"+
    "\33\0\21\15\1\0\4\15\1\u0395\1\15\1\0\11\15"+
    "\1\0\7\15\46\0\1\u0396\23\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u0397\3\15\1\0\7\15\46\0\1\u0398"+
    "\23\0\21\15\1\0\6\15\1\0\5\15\1\u0399\3\15"+
    "\1\0\7\15\27\0\1\u039a\42\0\17\15\1\u039b\1\15"+
    "\1\0\6\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u039c\3\15\1\0\7\15"+
    "\33\0\1\u039d\36\0\21\15\1\0\1\15\1\u039e\4\15"+
    "\1\0\11\15\1\0\7\15\37\0\1\u039f\32\0\21\15"+
    "\1\0\5\15\1\u03a0\1\0\11\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\u03a1\1\u03a2\10\15\1\0\7\15"+
    "\31\0\2\u03a3\37\0\21\15\1\u03a3\1\u03a4\5\15\1\0"+
    "\11\15\1\0\7\15\50\0\1\u03a5\21\0\21\15\1\0"+
    "\6\15\1\0\7\15\1\u03a6\1\15\1\0\7\15\33\0"+
    "\1\u03a7\36\0\21\15\1\0\1\15\1\u03a8\4\15\1\0"+
    "\11\15\1\0\7\15\35\0\1\u03a9\34\0\21\15\1\0"+
    "\3\15\1\u03aa\2\15\1\0\11\15\1\0\7\15\34\0"+
    "\1\u03ab\35\0\21\15\1\0\2\15\1\u03ac\3\15\1\0"+
    "\11\15\1\0\7\15\26\0\1\u03ad\43\0\16\15\1\u03ae"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\47\0"+
    "\1\u03af\22\0\21\15\1\0\6\15\1\0\6\15\1\u03b0"+
    "\2\15\1\0\7\15\44\0\1\u03b1\34\0\1\u03b2\70\0"+
    "\1\u03b3\43\0\21\15\1\0\6\15\1\0\3\15\1\u03b4"+
    "\5\15\1\0\7\15\10\0\7\15\1\u03b5\11\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\10\0\16\15\1\u03b6"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\36\0"+
    "\1\u03b7\33\0\21\15\1\0\4\15\1\u03b8\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\2\15\1\u03b9"+
    "\3\15\1\0\11\15\1\0\7\15\10\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\1\15\1\u03ba\5\15\26\0"+
    "\1\u03bb\43\0\16\15\1\u03bc\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\54\0\1\u03bd\15\0\21\15\1\0"+
    "\6\15\1\0\11\15\1\0\1\15\1\u03be\5\15\36\0"+
    "\1\u03bf\33\0\21\15\1\0\4\15\1\u03c0\1\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\1\15\1\u03c1"+
    "\4\15\1\0\11\15\1\0\7\15\35\0\1\u03c2\34\0"+
    "\21\15\1\0\3\15\1\u03c3\2\15\1\0\11\15\1\0"+
    "\7\15\33\0\1\u03c4\36\0\21\15\1\0\1\15\1\u03c5"+
    "\4\15\1\0\11\15\1\0\7\15\46\0\1\u03c6\23\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u03c7\3\15\1\0"+
    "\7\15\36\0\1\u03c8\33\0\21\15\1\0\4\15\1\u03c9"+
    "\1\15\1\0\11\15\1\0\7\15\26\0\1\u03ca\43\0"+
    "\16\15\1\u03cb\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\44\0\1\u03cc\25\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u03cd\5\15\1\0\7\15\36\0\1\u03ce\33\0"+
    "\21\15\1\0\4\15\1\u03cf\1\15\1\0\11\15\1\0"+
    "\7\15\35\0\1\u03d0\34\0\21\15\1\0\3\15\1\u03d1"+
    "\2\15\1\0\11\15\1\0\7\15\36\0\1\u03d2\33\0"+
    "\21\15\1\0\4\15\1\u03d3\1\15\1\0\11\15\1\0"+
    "\7\15\26\0\1\u03d4\43\0\16\15\1\u03d5\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\33\0\1\u03d6\65\0"+
    "\1\u03d7\32\0\21\15\1\0\1\15\1\u03d8\4\15\1\0"+
    "\11\15\1\0\7\15\10\0\21\15\1\0\5\15\1\u03d9"+
    "\1\0\11\15\1\0\7\15\17\0\1\u03da\52\0\7\15"+
    "\1\u03db\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\10\0\17\15\1\u03dc\1\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\10\0\7\15\1\u03dd\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\26\0\1\u03de\43\0\16\15"+
    "\1\u03df\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\51\0\1\u03e0\20\0\21\15\1\0\6\15\1\0\10\15"+
    "\1\u03e1\1\0\7\15\10\0\21\15\1\0\2\15\1\u03e2"+
    "\3\15\1\0\11\15\1\0\7\15\36\0\1\u03e3\33\0"+
    "\21\15\1\0\4\15\1\u03e4\1\15\1\0\11\15\1\0"+
    "\7\15\31\0\2\u03e5\37\0\21\15\1\u03e5\1\u03e6\5\15"+
    "\1\0\11\15\1\0\7\15\26\0\1\u03e7\43\0\16\15"+
    "\1\u03e8\2\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\43\0\1\u03e9\26\0\21\15\1\0\6\15\1\0\2\15"+
    "\1\u03ea\6\15\1\0\7\15\36\0\1\u03eb\33\0\21\15"+
    "\1\0\4\15\1\u03ec\1\15\1\0\11\15\1\0\7\15"+
    "\36\0\1\u03ed\33\0\21\15\1\0\4\15\1\u03ee\1\15"+
    "\1\0\11\15\1\0\7\15\46\0\1\u03ef\23\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u03f0\3\15\1\0\7\15"+
    "\33\0\1\u03f1\36\0\21\15\1\0\1\15\1\u03f2\4\15"+
    "\1\0\11\15\1\0\7\15\55\0\1\u03f3\14\0\21\15"+
    "\1\0\6\15\1\0\11\15\1\0\2\15\1\u03f4\4\15"+
    "\10\0\21\15\1\u03f5\1\u03f6\5\15\1\0\11\15\1\0"+
    "\7\15\10\0\21\15\1\0\6\15\1\0\6\15\1\u03f7"+
    "\2\15\1\0\7\15\36\0\1\u03f8\33\0\21\15\1\0"+
    "\4\15\1\u03f9\1\15\1\0\11\15\1\0\7\15\37\0"+
    "\1\u03fa\32\0\21\15\1\0\5\15\1\u03fb\1\0\11\15"+
    "\1\0\7\15\46\0\1\u03fc\23\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u03fd\3\15\1\0\7\15\40\0\2\u03fe"+
    "\30\0\21\15\1\0\6\15\1\u03fe\1\u03ff\10\15\1\0"+
    "\7\15\40\0\2\u0400\30\0\21\15\1\0\6\15\1\u0400"+
    "\1\u0401\10\15\1\0\7\15\26\0\1\u0402\17\0\1\u0403"+
    "\23\0\16\15\1\u0404\2\15\1\0\6\15\1\0\5\15"+
    "\1\u0405\3\15\1\0\7\15\31\0\2\u0406\37\0\21\15"+
    "\1\u0406\1\u0407\5\15\1\0\11\15\1\0\7\15\27\0"+
    "\1\u0408\42\0\17\15\1\u0409\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\31\0\2\u040a\37\0\21\15\1\u040a"+
    "\1\u040b\5\15\1\0\11\15\1\0\7\15\10\0\21\15"+
    "\1\0\6\15\1\0\5\15\1\u040c\3\15\1\0\7\15"+
    "\31\0\2\u040d\37\0\21\15\1\u040d\1\u040e\5\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u040f\33\0\21\15\1\0"+
    "\4\15\1\u0410\1\15\1\0\11\15\1\0\7\15\26\0"+
    "\1\u0411\43\0\16\15\1\u0412\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\33\0\1\u0413\36\0\21\15\1\0"+
    "\1\15\1\u0414\4\15\1\0\11\15\1\0\7\15\44\0"+
    "\1\u0415\25\0\21\15\1\0\6\15\1\0\3\15\1\u0416"+
    "\5\15\1\0\7\15\50\0\1\u0417\37\0\1\u0402\43\0"+
    "\21\15\1\0\6\15\1\0\7\15\1\u0418\1\15\1\0"+
    "\7\15\10\0\16\15\1\u0404\2\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u0419\33\0\21\15\1\0"+
    "\4\15\1\u041a\1\15\1\0\11\15\1\0\7\15\45\0"+
    "\1\u041b\24\0\21\15\1\0\6\15\1\0\4\15\1\u041c"+
    "\4\15\1\0\7\15\10\0\16\15\1\u041d\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\40\0\2\u041e\30\0"+
    "\21\15\1\0\6\15\1\u041e\1\u041f\10\15\1\0\7\15"+
    "\26\0\1\u0420\43\0\16\15\1\u0421\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\44\0\1\u0422\25\0\21\15"+
    "\1\0\6\15\1\0\3\15\1\u0423\5\15\1\0\7\15"+
    "\43\0\1\u0424\26\0\21\15\1\0\6\15\1\0\2\15"+
    "\1\u0425\6\15\1\0\7\15\17\0\1\u0426\52\0\7\15"+
    "\1\u0427\11\15\1\0\6\15\1\0\11\15\1\0\7\15"+
    "\31\0\2\u0428\37\0\21\15\1\u0428\1\u0429\5\15\1\0"+
    "\11\15\1\0\7\15\45\0\1\u042a\24\0\21\15\1\0"+
    "\6\15\1\0\4\15\1\u042b\4\15\1\0\7\15\10\0"+
    "\16\15\1\u042c\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\33\0\1\u042d\36\0\21\15\1\0\1\15\1\u042e"+
    "\4\15\1\0\11\15\1\0\7\15\31\0\2\u042f\37\0"+
    "\21\15\1\u042f\1\u0430\5\15\1\0\11\15\1\0\7\15"+
    "\50\0\1\u0431\21\0\21\15\1\0\6\15\1\0\7\15"+
    "\1\u0432\1\15\1\0\7\15\40\0\2\u0433\30\0\21\15"+
    "\1\0\6\15\1\u0433\1\u0434\10\15\1\0\7\15\10\0"+
    "\21\15\1\0\6\15\1\0\5\15\1\u0435\3\15\1\0"+
    "\7\15\44\0\1\u0436\25\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u0437\5\15\1\0\7\15\40\0\2\u0438\30\0"+
    "\21\15\1\0\6\15\1\u0438\1\u0439\10\15\1\0\7\15"+
    "\44\0\1\u043a\25\0\21\15\1\0\6\15\1\0\3\15"+
    "\1\u043b\5\15\1\0\7\15\10\0\21\15\1\0\1\15"+
    "\1\u043c\4\15\1\0\11\15\1\0\7\15\17\0\1\u043d"+
    "\52\0\7\15\1\u043e\11\15\1\0\6\15\1\0\11\15"+
    "\1\0\7\15\46\0\1\u043f\23\0\21\15\1\0\6\15"+
    "\1\0\5\15\1\u0440\3\15\1\0\7\15\43\0\1\u0441"+
    "\26\0\21\15\1\0\6\15\1\0\2\15\1\u0442\6\15"+
    "\1\0\7\15\10\0\21\15\1\0\3\15\1\u0443\2\15"+
    "\1\0\11\15\1\0\7\15\36\0\1\u0444\33\0\21\15"+
    "\1\0\4\15\1\u0445\1\15\1\0\11\15\1\0\7\15"+
    "\26\0\1\u0446\43\0\16\15\1\u0447\2\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\10\0\21\15\1\0\4\15"+
    "\1\u0448\1\15\1\0\11\15\1\0\7\15\46\0\1\u0449"+
    "\23\0\21\15\1\0\6\15\1\0\5\15\1\u044a\3\15"+
    "\1\0\7\15\37\0\1\u044b\32\0\21\15\1\0\5\15"+
    "\1\u044c\1\0\11\15\1\0\7\15\10\0\16\15\1\u044d"+
    "\2\15\1\0\6\15\1\0\11\15\1\0\7\15\27\0"+
    "\1\u044e\42\0\17\15\1\u044f\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u0450\33\0\21\15\1\0"+
    "\4\15\1\u0451\1\15\1\0\11\15\1\0\7\15\37\0"+
    "\1\u0452\32\0\21\15\1\0\5\15\1\u0453\1\0\11\15"+
    "\1\0\7\15\40\0\2\u0454\30\0\21\15\1\0\6\15"+
    "\1\u0454\1\u0455\10\15\1\0\7\15\26\0\1\u0456\43\0"+
    "\16\15\1\u0457\2\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\33\0\1\u0458\36\0\21\15\1\0\1\15\1\u0459"+
    "\4\15\1\0\11\15\1\0\7\15\17\0\1\u045a\52\0"+
    "\7\15\1\u045b\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\44\0\1\u045c\25\0\21\15\1\0\6\15\1\0"+
    "\3\15\1\u045d\5\15\1\0\7\15\37\0\1\u045e\32\0"+
    "\21\15\1\0\5\15\1\u045f\1\0\11\15\1\0\7\15"+
    "\17\0\1\u0460\52\0\7\15\1\u0461\11\15\1\0\6\15"+
    "\1\0\11\15\1\0\7\15\33\0\1\u0462\36\0\21\15"+
    "\1\0\1\15\1\u0463\4\15\1\0\11\15\1\0\7\15"+
    "\36\0\1\u0464\33\0\21\15\1\0\4\15\1\u0465\1\15"+
    "\1\0\11\15\1\0\7\15\31\0\2\u0466\37\0\21\15"+
    "\1\u0466\1\u0467\5\15\1\0\11\15\1\0\7\15\46\0"+
    "\1\u0468\23\0\21\15\1\0\6\15\1\0\5\15\1\u0469"+
    "\3\15\1\0\7\15\36\0\1\u046a\33\0\21\15\1\0"+
    "\4\15\1\u046b\1\15\1\0\11\15\1\0\7\15\27\0"+
    "\1\u046c\42\0\17\15\1\u046d\1\15\1\0\6\15\1\0"+
    "\11\15\1\0\7\15\31\0\2\u046e\37\0\21\15\1\u046e"+
    "\1\u046f\5\15\1\0\11\15\1\0\7\15\37\0\1\u0470"+
    "\32\0\21\15\1\0\5\15\1\u0471\1\0\11\15\1\0"+
    "\7\15\26\0\1\u0472\43\0\16\15\1\u0473\2\15\1\0"+
    "\6\15\1\0\11\15\1\0\7\15\17\0\1\u0474\52\0"+
    "\7\15\1\u0475\11\15\1\0\6\15\1\0\11\15\1\0"+
    "\7\15\37\0\1\u0476\32\0\21\15\1\0\5\15\1\u0477"+
    "\1\0\11\15\1\0\7\15\33\0\1\u0478\36\0\21\15"+
    "\1\0\1\15\1\u0479\4\15\1\0\11\15\1\0\7\15"+
    "\31\0\2\u047a\37\0\21\15\1\u047a\1\u047b\5\15\1\0"+
    "\11\15\1\0\7\15\36\0\1\u047c\33\0\21\15\1\0"+
    "\4\15\1\u047d\1\15\1\0\11\15\1\0\7\15\31\0"+
    "\2\u047e\37\0\21\15\1\u047e\1\u047f\5\15\1\0\11\15"+
    "\1\0\7\15\4\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[49100];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\7\0\1\1\1\11\1\1\1\11\4\1\2\11\27\1"+
    "\2\11\1\1\2\11\2\1\2\11\4\1\1\11\1\1"+
    "\3\0\10\1\6\0\15\1\1\0\1\1\1\0\4\1"+
    "\1\0\1\1\1\0\2\1\1\0\4\1\1\0\6\1"+
    "\1\0\10\1\1\0\3\1\1\0\1\1\1\0\2\1"+
    "\1\0\2\1\1\0\3\1\1\0\1\11\1\0\7\1"+
    "\11\0\20\1\1\0\1\1\1\0\6\1\1\0\1\1"+
    "\1\0\10\1\1\0\4\1\1\0\12\1\1\0\7\1"+
    "\1\0\1\1\1\11\2\1\1\0\2\1\1\0\1\1"+
    "\3\0\3\1\1\0\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\3\1\1\0\1\1\1\0\1\1\1\11\2\1"+
    "\5\0\1\11\4\0\16\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\4\1\1\0\3\1"+
    "\1\0\2\1\1\0\1\11\6\1\1\0\2\1\1\0"+
    "\2\1\1\0\1\1\2\0\7\1\1\11\3\1\1\0"+
    "\7\1\1\0\3\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\2\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\3\1\1\0\1\1\1\0\2\1\6\0"+
    "\2\11\1\0\11\1\1\0\4\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\3\1\1\0\6\1\2\0"+
    "\2\1\1\11\1\1\1\0\1\1\4\0\7\1\1\0"+
    "\1\1\1\0\2\1\1\0\1\1\2\0\12\1\1\0"+
    "\4\1\1\11\3\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\1\11\4\1\1\0\1\1"+
    "\1\0\1\1\1\0\3\1\1\11\1\1\1\0\2\1"+
    "\4\0\1\11\2\0\7\1\1\0\3\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\3\0\3\1\1\0\4\1"+
    "\2\0\2\1\1\11\1\0\2\1\1\0\1\1\4\0"+
    "\7\1\1\0\1\1\1\11\2\1\1\0\1\1\2\0"+
    "\2\1\1\0\10\1\1\0\2\1\1\11\4\1\1\0"+
    "\2\1\2\0\2\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\0\1\11\3\1\1\0\1\1\1\11\1\1\1\0"+
    "\2\1\1\0\2\1\1\11\6\0\7\1\1\11\2\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\2\11"+
    "\3\1\1\0\4\1\1\0\1\11\2\1\1\11\1\1"+
    "\1\0\1\1\4\0\7\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\2\0\2\1\1\0\3\1\1\0\3\1"+
    "\1\0\4\1\1\0\3\1\1\0\1\1\1\0\1\1"+
    "\2\0\2\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\0\2\1\6\0\7\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\11\3\1"+
    "\1\0\1\1\1\11\1\1\2\0\1\11\1\0\5\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\11\1\1"+
    "\1\0\1\11\2\1\1\0\2\1\1\0\2\1\1\0"+
    "\1\1\1\0\2\1\1\0\3\1\1\0\1\1\1\0"+
    "\1\1\1\11\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\2\1\1\0\1\1\2\0\1\11\3\0\7\1"+
    "\1\11\1\1\1\0\1\1\1\11\3\1\1\0\1\1"+
    "\1\0\1\11\1\0\4\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\11\1\1\1\0\2\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\3\0\1\11"+
    "\1\0\6\1\1\0\2\1\1\0\1\1\1\11\1\0"+
    "\3\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\11\2\1\1\11"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\0"+
    "\1\1\1\11\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\3\0\1\11\4\1\1\0\2\1"+
    "\1\11\1\1\1\11\2\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\2\0\1\11\7\1\1\0\1\1\1\11\1\1\1\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\11\1\1\1\11\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\0\2\1"+
    "\1\0\3\1\1\11\1\1\1\11\2\1\1\11\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\2\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\2\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\11\1\1"+
    "\1\11\1\1\1\0\1\1\1\0\1\1\1\11\1\1"+
    "\1\0\2\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\4\1\1\0\1\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\11\2\1\1\0\1\1\1\0\2\1"+
    "\1\0\1\1\1\0\2\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1151];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
  StringBuffer string = new StringBuffer();

  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public DsnFileScanner(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 246) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Object next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { yybegin(YYINITIAL); return yytext();
            }
          case 122: break;
          case 2: 
            { throw new Error("Illegal character <"+
                                                    yytext()+">");
            }
          case 123: break;
          case 3: 
            { /* ignore */
            }
          case 124: break;
          case 4: 
            { return yytext();
            }
          case 125: break;
          case 5: 
            { return new Integer(yytext());
            }
          case 126: break;
          case 6: 
            { string.setLength(0); yybegin(STRING1);
            }
          case 127: break;
          case 7: 
            { string.setLength(0); yybegin(STRING2);
            }
          case 128: break;
          case 8: 
            { return DsnKeyword.OPEN_BRACKET;
            }
          case 129: break;
          case 9: 
            { return DsnKeyword.CLOSED_BRACKET;
            }
          case 130: break;
          case 10: 
            { string.append( yytext() );
            }
          case 131: break;
          case 11: 
            { yybegin(YYINITIAL); return string.toString();
            }
          case 132: break;
          case 12: 
            { string.append('\\');
            }
          case 133: break;
          case 13: 
            { yybegin(YYINITIAL); return DsnKeyword.OPEN_BRACKET;
            }
          case 134: break;
          case 14: 
            { yybegin(YYINITIAL); return DsnKeyword.CLOSED_BRACKET;
            }
          case 135: break;
          case 15: 
            { return new Double(yytext());
            }
          case 136: break;
          case 16: 
            { return DsnKeyword.ON;
            }
          case 137: break;
          case 17: 
            { return DsnKeyword.OFF;
            }
          case 138: break;
          case 18: 
            { yybegin(NAME); return DsnKeyword.VIA;
            }
          case 139: break;
          case 19: 
            { yybegin(NAME); return DsnKeyword.NET;
            }
          case 140: break;
          case 20: 
            { return DsnKeyword.PCB_SCOPE;
            }
          case 141: break;
          case 21: 
            { return DsnKeyword.PIN;
            }
          case 142: break;
          case 22: 
            { return DsnKeyword.FIX;
            }
          case 143: break;
          case 23: 
            { yybegin(YYINITIAL); return DsnKeyword.PCB_SCOPE;
            }
          case 144: break;
          case 24: 
            { return DsnKeyword.BACK;
            }
          case 145: break;
          case 25: 
            { return DsnKeyword.SIDE;
            }
          case 146: break;
          case 26: 
            { return DsnKeyword.TYPE;
            }
          case 147: break;
          case 27: 
            { yybegin(NAME); return DsnKeyword.COMPONENT_SCOPE;
            }
          case 148: break;
          case 28: 
            { yybegin(LAYER_NAME); return DsnKeyword.CIRCLE;
            }
          case 149: break;
          case 29: 
            { return DsnKeyword.VIAS;
            }
          case 150: break;
          case 30: 
            { return DsnKeyword.NONE;
            }
          case 151: break;
          case 31: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYGON_PATH;
            }
          case 152: break;
          case 32: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYGON;
            }
          case 153: break;
          case 33: 
            { return DsnKeyword.PINS;
            }
          case 154: break;
          case 34: 
            { yybegin(LAYER_NAME); return DsnKeyword.RECTANGLE;
            }
          case 155: break;
          case 35: 
            { return DsnKeyword.RULE;
            }
          case 156: break;
          case 36: 
            { yybegin(NAME); return DsnKeyword.WIRE;
            }
          case 157: break;
          case 37: 
            { return DsnKeyword.SPARE;
            }
          case 158: break;
          case 38: 
            { return DsnKeyword.SHAPE;
            }
          case 159: break;
          case 39: 
            { return DsnKeyword.ORDER;
            }
          case 160: break;
          case 40: 
            { yybegin(NAME); return DsnKeyword.LAYER;
            }
          case 161: break;
          case 41: 
            { return DsnKeyword.CLEARANCE;
            }
          case 162: break;
          case 42: 
            { yybegin(NAME); return DsnKeyword.CLASS;
            }
          case 163: break;
          case 43: 
            { yybegin(NAME); return DsnKeyword.IMAGE;
            }
          case 164: break;
          case 44: 
            { return DsnKeyword.POWER;
            }
          case 165: break;
          case 45: 
            { yybegin(NAME); return DsnKeyword.PLACE;
            }
          case 166: break;
          case 46: 
            { yybegin(NAME); return DsnKeyword.PLANE_SCOPE;
            }
          case 167: break;
          case 47: 
            { return DsnKeyword.RULES;
            }
          case 168: break;
          case 48: 
            { return DsnKeyword.FRONT;
            }
          case 169: break;
          case 49: 
            { return DsnKeyword.WIDTH;
            }
          case 170: break;
          case 50: 
            { return DsnKeyword.ATTACH;
            }
          case 171: break;
          case 51: 
            { return DsnKeyword.ACTIVE;
            }
          case 172: break;
          case 52: 
            { return DsnKeyword.SIGNAL;
            }
          case 173: break;
          case 53: 
            { return DsnKeyword.LENGTH;
            }
          case 174: break;
          case 54: 
            { return DsnKeyword.NORMAL;
            }
          case 175: break;
          case 55: 
            { return DsnKeyword.PARSER_SCOPE;
            }
          case 176: break;
          case 56: 
            { return DsnKeyword.ROUTES;
            }
          case 177: break;
          case 57: 
            { return DsnKeyword.ROTATE;
            }
          case 178: break;
          case 58: 
            { return DsnKeyword.FANOUT;
            }
          case 179: break;
          case 59: 
            { return DsnKeyword.FROMTO;
            }
          case 180: break;
          case 60: 
            { return DsnKeyword.WINDOW;
            }
          case 181: break;
          case 61: 
            { return DsnKeyword.WIRING_SCOPE;
            }
          case 182: break;
          case 62: 
            { yybegin(YYINITIAL); return DsnKeyword.SIGNAL;
            }
          case 183: break;
          case 63: 
            { return DsnKeyword.SESSION;
            }
          case 184: break;
          case 64: 
            { return DsnKeyword.OUTLINE;
            }
          case 185: break;
          case 65: 
            { return DsnKeyword.LIBRARY_SCOPE;
            }
          case 186: break;
          case 66: 
            { yybegin(NAME); return DsnKeyword.USE_VIA;
            }
          case 187: break;
          case 67: 
            { yybegin(NAME); return DsnKeyword.USE_NET;
            }
          case 188: break;
          case 68: 
            { return DsnKeyword.CONTROL;
            }
          case 189: break;
          case 69: 
            { return DsnKeyword.CLASSES;
            }
          case 190: break;
          case 70: 
            { return DsnKeyword.CIRCUIT;
            }
          case 191: break;
          case 71: 
            { return DsnKeyword.NETWORK_SCOPE;
            }
          case 192: break;
          case 72: 
            { return DsnKeyword.PROTECT;
            }
          case 193: break;
          case 73: 
            { yybegin(NAME); return DsnKeyword.KEEPOUT;
            }
          case 194: break;
          case 74: 
            { return DsnKeyword.ABSOLUTE;
            }
          case 195: break;
          case 75: 
            { return DsnKeyword.BOUNDARY;
            }
          case 196: break;
          case 76: 
            { return DsnKeyword.CONSTANT;
            }
          case 197: break;
          case 77: 
            { return DsnKeyword.VERTICAL;
            }
          case 198: break;
          case 78: 
            { return DsnKeyword.VIA_RULE;
            }
          case 199: break;
          case 79: 
            { yybegin(NAME); return DsnKeyword.PADSTACK;
            }
          case 200: break;
          case 80: 
            { return DsnKeyword.POSITION;
            }
          case 201: break;
          case 81: 
            { yybegin(NAME); return DsnKeyword.HOST_CAD;
            }
          case 202: break;
          case 82: 
            { return DsnKeyword.AUTOROUTE;
            }
          case 203: break;
          case 83: 
            { return DsnKeyword.STRUCTURE_SCOPE;
            }
          case 204: break;
          case 84: 
            { return DsnKeyword.LOCK_TYPE;
            }
          case 205: break;
          case 85: 
            { yybegin(NAME); return DsnKeyword.USE_LAYER;
            }
          case 206: break;
          case 86: 
            { return DsnKeyword.VIA_COSTS;
            }
          case 207: break;
          case 87: 
            { return DsnKeyword.POSTROUTE;
            }
          case 208: break;
          case 88: 
            { return DsnKeyword.PLACEMENT_SCOPE;
            }
          case 209: break;
          case 89: 
            { return DsnKeyword.SNAP_ANGLE;
            }
          case 210: break;
          case 90: 
            { yybegin(NAME); return DsnKeyword.LAYER_RULE;
            }
          case 211: break;
          case 91: 
            { return DsnKeyword.VIA_AT_SMD;
            }
          case 212: break;
          case 92: 
            { return DsnKeyword.PULL_TIGHT;
            }
          case 213: break;
          case 93: 
            { return DsnKeyword.RESOLUTION_SCOPE;
            }
          case 214: break;
          case 94: 
            { return DsnKeyword.FLIP_STYLE;
            }
          case 215: break;
          case 95: 
            { return DsnKeyword.HORIZONTAL;
            }
          case 216: break;
          case 96: 
            { return DsnKeyword.SHOVE_FIXED;
            }
          case 217: break;
          case 97: 
            { return DsnKeyword.CLASS_CLASS;
            }
          case 218: break;
          case 98: 
            { yybegin(NAME); return DsnKeyword.VIA_KEEPOUT;
            }
          case 219: break;
          case 99: 
            { return DsnKeyword.NETWORK_OUT;
            }
          case 220: break;
          case 100: 
            { yybegin(IGNORE_QUOTE); return DsnKeyword.STRING_QUOTE;
            }
          case 221: break;
          case 101: 
            { yybegin(NAME); return DsnKeyword.LOGICAL_PART;
            }
          case 222: break;
          case 102: 
            { return DsnKeyword.PART_LIBRARY_SCOPE;
            }
          case 223: break;
          case 103: 
            { return DsnKeyword.ROTATE_FIRST;
            }
          case 224: break;
          case 104: 
            { yybegin(NAME); return DsnKeyword.HOST_VERSION;
            }
          case 225: break;
          case 105: 
            { return DsnKeyword.KEEPOUT;
            }
          case 226: break;
          case 106: 
            { return DsnKeyword.START_PASS_NO;
            }
          case 227: break;
          case 107: 
            { return DsnKeyword.NINETY_DEGREE;
            }
          case 228: break;
          case 108: 
            { yybegin(LAYER_NAME); return DsnKeyword.POLYLINE_PATH;
            }
          case 229: break;
          case 109: 
            { return DsnKeyword.PLACE_CONTROL;
            }
          case 230: break;
          case 110: 
            { yybegin(NAME); return DsnKeyword.PLACE_KEEPOUT;
            }
          case 231: break;
          case 111: 
            { yybegin(NAME); return DsnKeyword.CLEARANCE_CLASS;
            }
          case 232: break;
          case 112: 
            { return DsnKeyword.PLANE_VIA_COSTS;
            }
          case 233: break;
          case 113: 
            { return DsnKeyword.FORTYFIVE_DEGREE;
            }
          case 234: break;
          case 114: 
            { return DsnKeyword.WRITE_RESOLUTION;
            }
          case 235: break;
          case 115: 
            { return DsnKeyword.START_RIPUP_COSTS;
            }
          case 236: break;
          case 116: 
            { return DsnKeyword.AUTOROUTE_SETTINGS;
            }
          case 237: break;
          case 117: 
            { return DsnKeyword.PREFERRED_DIRECTION;
            }
          case 238: break;
          case 118: 
            { yybegin(NAME); return DsnKeyword.LOGICAL_PART_MAPPING;
            }
          case 239: break;
          case 119: 
            { return DsnKeyword.GENERATED_BY_FREEROUTE;
            }
          case 240: break;
          case 120: 
            { return DsnKeyword.PREFERRED_DIRECTION_TRACE_COSTS;
            }
          case 241: break;
          case 121: 
            { return DsnKeyword.AGAINST_PREFERRED_DIRECTION_TRACE_COSTS;
            }
          case 242: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
